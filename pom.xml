<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>tw.elliot</groupId>
	<artifactId>jpa2demo</artifactId>
	<version>0.1</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.0.5.RELEASE</spring.version>
		<struts.version>2.1.8.1</struts.version>
		<slf4j.version>1.6.1</slf4j.version>
		<hibernate.version>3.6.3.Final</hibernate.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.27</version>
		</dependency>
		<!-- 用以取代commons-logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- 用以取代Log4j，若確定系統中都是透過commons-logging並未直接呼叫log4j的話可以不用加此設定
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version> 
		</dependency>
		-->
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- Hibernate 3.6起將annotation併入core中 
		<dependency>
			<groupId>org.hibernate</groupId> 
			<artifactId>hibernate-annotations</artifactId>
			<version>${hibernate.version}</version> 
		</dependency> 
		-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Hibernate Dependency -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- Connection Pool -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- Database -->
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.154</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.15</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.8</version>
		</dependency>
		<!-- iBatis -->
		<dependency>
			<groupId>org.apache.ibatis</groupId>
			<artifactId>ibatis-sqlmap</artifactId>
			<version>2.3.4.726</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resource</directory>
			</resource>
			<resource>
				<directory>src/main/personal</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- 要求Emma Plugin 在 process-classes 時執行instrument, 
			但在test 與site時都略過執行-->
			<plugin>
				<groupId>org.sonatype.maven.plugin</groupId>
				<artifactId>emma-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>instrument</id>
						<phase>process-classes</phase>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
					<execution>
						<id>test</id>
						<phase>test</phase>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
					<execution>
						<id>site</id>
						<phase>site</phase>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 由Surefire指定classesDirectory，
				該directory下存放的是被emma instrumented過的Class,
				執行完後自然就會產生emma report所需要的資料 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.8</version>
				<inherited>true</inherited>
				<!--  -->
				<configuration>
					<forkMode>once</forkMode>
					<reportFormat>xml</reportFormat>
					<classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.3</version>
				<configuration>
					<connectionType>connection</connectionType>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0-beta-3</version>
				<configuration>
					<reportplugins>
						<!-- maven-project-info-reports-plugin即是指供project information的plugin -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<!-- 可不指定version -->
							<version>2.2</version>
							<!-- dependencyDetailsEnabled 及 dependencyLocationsEnabled 設為false 
								時會讓 dependencies report 少產生部份資訊 -->
							<configuration>
								<dependencydetailsenabled>false</dependencydetailsenabled>
								<dependencylocationsenabled>false</dependencylocationsenabled>
							</configuration>
							<!-- 基本的information report都在下面了，若有不需要看的就mark掉就好 -->
							<reports>
								<report>cim</report>
								<report>dependencies</report>
								<report>index</report>
								<report>issue-tracking</report>
								<report>license</report>
								<report>mailing-list</report>
								<report>plugin-management</report>
								<report>plugins</report>
								<report>project-team</report>
								<report>scm</report>
								<report>summary</report>
							</reports>
						</plugin>
					</reportplugins>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<scm>
		<connection>scm:git:git://github.com/ElliotChen/jpa2demo.git</connection>
		<developerConnection>scm:git:git@github.com:ElliotChen/jpa2demo.git</developerConnection>
		<url>https://github.com/ElliotChen/jpa2demo</url>
	</scm>
	<reporting>
		<plugins>
			<!-- -->
			<plugin>
				<groupId>org.sonatype.maven.plugin</groupId>
				<artifactId>emma-maven-plugin</artifactId>
				<version>1.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.8</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>UTF-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.6</targetJdk>
				</configuration>
			</plugin>
			<!--  -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javancss-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.1.2</version>
				<configuration>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> 
				<version>2.6</version> <configuration> <configLocation>${basedir}/buildtools/maven_checks.xml</configLocation> 
				</configuration> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.2</version>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<profiles>
		<profile>
			<id>production</id>
			<properties>
				<jdbc.driverClass>com.mysql.jdbc.Driver</jdbc.driverClass>
				<jdbc.url>jdbc:mysql://192.168.1.13:3306/elitech</jdbc.url>
				<jdbc.user>elitech</jdbc.user>
				<jdbc.password>25146875</jdbc.password>
				<hibernate.database>MySQL with InnoDB</hibernate.database>
				<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect
				</hibernate.dialect>
				<hibernate.show_sql>true</hibernate.show_sql>
				<hibernate.format_sql>true</hibernate.format_sql>
				<hibernate.generate_statistics>true</hibernate.generate_statistics>
				<hibernate.hbm2ddl.auto>create</hibernate.hbm2ddl.auto>
				<hibernate.cache.use_second_level_cache>true
				</hibernate.cache.use_second_level_cache>
				<hibernate.generate_ddl>true</hibernate.generate_ddl>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>stage</id>
			<properties>
				<jdbc.driverClass>org.h2.Driver</jdbc.driverClass>
				<jdbc.url>jdbc:h2:tcp://localhost/~/test</jdbc.url>
				<jdbc.user>sa</jdbc.user>
				<jdbc.password></jdbc.password>
				<hibernate.database>H2</hibernate.database>
				<hibernate.dialect>org.hibernate.dialect.H2Dialect
				</hibernate.dialect>
				<hibernate.show_sql>true</hibernate.show_sql>
				<hibernate.format_sql>true</hibernate.format_sql>
				<hibernate.generate_statistics>true</hibernate.generate_statistics>
				<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
				<hibernate.cache.use_second_level_cache>true
				</hibernate.cache.use_second_level_cache>
				<hibernate.generate_ddl>true</hibernate.generate_ddl>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.4</version>
						<dependencies>
							<!-- specify the dependent jdbc driver here -->
							<dependency>
								<groupId>com.h2database</groupId>
								<artifactId>h2</artifactId>
								<version>1.2.147</version>
							</dependency>
						</dependencies>
						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>${jdbc.driverClass}</driver>
							<url>${jdbc.url}</url>
							<username>${jdbc.user}</username>
							<password>${jdbc.password}</password>
						</configuration>

						<executions>
							<execution>
								<id>test data</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<!-- specific configuration for this execution -->
								<configuration>
									<!-- specify your SQL commands, can be all of the following configurations -->
									<srcFiles>
										<srcFile>src/test/sql/h2/initial.sql</srcFile>
										<srcFile>src/test/sql/h2/test.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>quick</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
	</profiles>
</project>